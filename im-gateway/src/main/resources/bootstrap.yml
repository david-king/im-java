spring:
  application:
    name: im-config
  cloud:
    consul:
      host: localhost
      port: 8500
      # 服务发现配置
      discovery:
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true
        # 表示注册时使用IP而不是hostname
        prefer-ip-address: true
        # 执行监控检查的频率
        health-check-interval: 10s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        # 服务名称
#        service-name: ${spring.application.name}
        # 服务注册标识，格式为：应用名称+服务器IP+端口
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
      config:
        # 表示如果没有发现配置，是否抛出异常，true为是，false为否，当为false时，consul会打印warn级别的日志信息
        fail-fast: false
        format: yaml
        default-context: ${spring.application.name}
        prefix: config
        data-key: data
        profile-separator: ','
        # watch选项为配置监视功能，主要监视配置的改变
        watch:
          enabled: true
          delay: 1000
          wait-time: 30
    gateway:
      discovery:
        locator:
          enabled: true # 设置为true,请求路径前可以加微服务名称
          lower-case-service-id: true # 允许小写
      default-filters:
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/default-error
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,BAD_REQUEST
      routes:
        # 路由的ID
        - id: user-server
          # Consul的服务名称，以{lb://服务名}进行访问
          uri: lb://im-user-server
          predicates:
            # 路由要匹配的路径格式
            - Path=/user-server/**
          filters:
            # 设置路径过滤器，作用是匹配后可以根据分割符进行访问路径的设置
#            - SetPath=/{segment}
            - RewritePath=/user-server/(?<path>.*), /$\{path}
            - name: Hystrix
              args:
                name: service-user-fallback
                fallbackUri: forward:/service-user-error


